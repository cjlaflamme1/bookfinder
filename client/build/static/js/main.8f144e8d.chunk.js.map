{"version":3,"sources":["components/bookDisplay.js","utils/api.js","pages/search.js","pages/saved.js","components/nav.js","components/jumbotron.js","App.js","reportWebVitals.js","index.js"],"names":["BookDisplay","props","className","data-id","data","id","imageLinks","src","thumbnail","title","authors","author","description","href","infoLink","target","require","config","searchTerm","axios","get","book","post","delete","Search","searchInputRef","useRef","searchByRef","useState","books","setBooks","submitSave","event","preventDefault","console","log","childNodes","dataset","bookID","API","then","volumeInfo","subtitle","newBook","onSubmit","current","value","res","newBooks","items","map","push","catch","err","name","ref","for","type","Saved","savedBooks","setSavedBooks","useEffect","submitDelete","Nav","to","Jumbotron","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f144e8d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction BookDisplay(props) {\n\n\n    return (\n        <>\n\n            <div className=\"single-book-display card\" data-id={props.data.id}>\n                {props.data.imageLinks &&\n                    <img className=\"book-image card-img-top\" src={props.data.imageLinks.thumbnail} />\n\n                }\n                <div className=\"card-body\">\n                    <div className=\"book-title card-title\">{props.data.title}</div>\n            <div className=\"book-author card-subtitle\">{props.data.authors[0]} || {props.data.author}</div>\n                    <div className=\"book-description card-text\">{props.data.description}</div>\n\n                </div>\n                    <a className=\"book-link btn btn-primary\" href={props.data.infoLink} target=\"_blank\">Learn More Here</a>\n\n            </div>\n        </>\n    )\n}\n\nexport default BookDisplay;","import axios from 'axios';\nrequire('dotenv').config();\n\nexport default {\n    searchByTitle: (searchTerm) => {\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}+intitle`)\n    },\n    searchByAuthor: (searchTerm) => {\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}+inauthor`)\n    },\n    addNewBook: (book) => {\n        return axios.post(\"/api/books\", book);\n    },\n    searchByID: (id) => {\n        return axios.get(`https://www.googleapis.com/books/v1/volumes/${id}`);\n    },\n    getSavedBooks: () => {\n        return axios.get(\"/api/books\");\n    },\n    deleteSaved: (id) => {\n        return axios.delete(`/api/books/${id}`);\n    }\n}","import React, { useRef, useState, useEffect } from 'react';\nimport BookDisplay from '../components/bookDisplay';\nimport API from '../utils/api';\n\nfunction Search() {\n    const searchInputRef = useRef();\n    const searchByRef = useRef();\n    const [books, setBooks] = useState([])\n\n    const submitSave = (event) => {\n        event.preventDefault();\n        console.log(event.target.childNodes[0].dataset.id);\n        const bookID = event.target.childNodes[0].dataset.id;\n        API.searchByID(bookID).then((data) => {\n            console.log(data);\n            const { data: { id, volumeInfo: { authors:[author], description, imageLinks, infoLink, subtitle, title }}} = data;\n            const newBook = { id, title, author, description, imageLinks, infoLink, subtitle};\n            console.log(newBook);\n            API.addNewBook(newBook);\n        })\n    }\n\n        // Set useState to set state of books to an array of objects.\n\n    const submitSearch = (event) => {\n        event.preventDefault();\n   \n        if(searchByRef.current.value === \"Title\") {\n            API.searchByTitle(searchInputRef.current.value).then((res) => {\n                \n                const newBooks = [];\n                console.log(res);\n                const { data: { items}} = res;\n                console.log(items);\n                items.map(({ id, volumeInfo }) => {\n                    const { authors = [\"No Author Provided\"], description= \"Description Not Provided\", imageLinks, infoLink, subtitle= \"Not Provided\", title= \"Not Provided\" } = volumeInfo;\n                    newBooks.push({id, authors, description, imageLinks, infoLink, subtitle, title})\n                })\n                console.log(newBooks);\n                setBooks(newBooks);\n\n            }).catch(err => console.log(err));\n        } else {\n            API.searchByAuthor(searchInputRef.current.value).then((res) => {\n                const newBooks = [];\n                // console.log(res);\n                const { data: { items}} = res;\n                items.map(({ id, volumeInfo }) => {\n                    const { authors =[\"No Author Provided\"], description= \"Description Not Provided\", imageLinks, infoLink, subtitle, title } = volumeInfo;\n                    newBooks.push({id, authors, description, imageLinks, infoLink, subtitle, title})\n                })\n                console.log(newBooks);\n                setBooks(newBooks);\n            }).catch(err => console.log(err));\n        }\n        // Set this submitSearch function to fill the state of the books array with the retried items.\n        //  THEN, set the props for the bookdisplay as the current state.\n        // return;\n    }\n\n    return (\n        <>\n            <div className=\"search-container d-flex justify-content-center border\">\n                <h4 className=\"m-2\">\n                    Book Search:\n                </h4>\n                <form onSubmit={submitSearch}>\n                    <input name=\"searchContent\" ref= {searchInputRef} className=\"m-2\"/>\n                    <br />\n                    <label for=\"searchMethod\" className=\"my-2\">Search by:</label>\n                    <select name=\"searchMethod\" id=\"searchMethod\" ref={searchByRef} className=\"m-2\">\n                        <option value=\"Title\" >Title</option>\n                        <option value=\"Author\" >Author</option>\n                    </select>\n                    <button type=\"submit\" className=\"btn btn-info\">Search</button>\n                </form>\n            </div>\n            <div className=\"books-container row\">\n                {books && \n                books.map((book) => {\n                  return  <form onSubmit={submitSave} className=\"col-12 col-md-4 my-2\">\n                     <BookDisplay data={book}/>\n                <button type=\"submit\" className=\"btn btn-info\">Save</button>\n                </form>\n                })\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport BookDisplay from '../components/bookDisplay';\nimport API from '../utils/api';\n\nfunction Saved() {\n    const [savedBooks, setSavedBooks] = useState([]);\n\n    useEffect(() => {\n        API.getSavedBooks().then((data) => {\n            console.log(data.data);\n            \n            setSavedBooks(data.data);\n        })\n    }, [])\n\n    const submitDelete = (event) => {\n        event.preventDefault();\n        console.log('buttons pressed');\n        const bookID = event.target.childNodes[0].dataset.id;\n        console.log(`trying to delete ${bookID}`);\n        API.deleteSaved(bookID);\n    }\n\n\n    return (\n        <>\n        <div className=\" d-flex justify-content-center border\">\n            <h4>\n                Saved Books\n            </h4>\n            </div>\n        <div className=\"books-container row\"> \n            {console.log(savedBooks)}\n            {savedBooks &&\n            \n            savedBooks.map((book) => {\n                return <form onSubmit={() => submitDelete} className=\"col-12 col-md-4 my-2\">\n                    <BookDisplay data={book}/>\n                <button type=\"submit\"  className=\"btn btn-info\">Delete</button>\n                </form>\n\n            })}\n        </div>\n        </>\n    )\n}\n\nexport default Saved;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <span className=\"navbar-brand\">Google Book Finder</span>\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            Search\n          </Link>\n\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/saved\" className=\"nav-link\">\n            Saved Books\n          </Link>\n\n\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron\">\n            <h1 className=\"display-4 text-center\">\n                Google Book Finder\n            </h1>\n            <h3 className=\"lead text-center\">\n                Search for books and save for later.\n            </h3>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from './pages/search';\nimport Saved from './pages/saved';\nimport Nav from './components/nav';\nimport Jumbotron from './components/jumbotron';\n\nfunction App() {\n  return (\n    <Router>\n    <Nav />\n    <Jumbotron />\n    <Switch>\n      {/* This is where the main page routes will go.  */}\n      <Route exact path= \"/\">\n        <div className=\"container\">\n        <Search />\n\n        </div>\n      </Route>\n      <Route exact path=\"/saved\">\n        <div className=\"container\">\n        <Saved />\n\n        </div>\n      </Route>\n    </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}