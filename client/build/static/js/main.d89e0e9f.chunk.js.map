{"version":3,"sources":["components/bookDisplay.js","utils/api.js","pages/search.js","pages/saved.js","components/nav.js","components/jumbotron.js","App.js","reportWebVitals.js","index.js"],"names":["BookDisplay","props","console","log","className","data-id","data","id","imageLinks","src","thumbnail","title","authors","description","href","infoLink","target","require","config","searchTerm","axios","get","book","post","Search","searchInputRef","useRef","searchByRef","useState","books","setBooks","submitSave","event","preventDefault","childNodes","dataset","bookID","API","then","volumeInfo","author","subtitle","newBook","onSubmit","current","value","res","newBooks","items","map","push","catch","err","image","name","ref","for","type","Saved","Nav","to","Jumbotron","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d89e0e9f.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction BookDisplay(props) {\r\n\r\n\r\n    return (\r\n        <>\r\n        {console.log(\"BookDisplay rendered\")}\r\n            <div className=\"single-book-display\" data-id={props.data.id}>\r\n                {props.data.imageLinks &&\r\n                <img className=\"book-image\" src={props.data.imageLinks.thumbnail} />\r\n                \r\n                }\r\n                <div className=\"book-title\">{props.data.title}</div>\r\n                <div className=\"book-author\">{props.data.authors}</div>\r\n                <div className=\"book-description\">{props.data.description}</div>\r\n                <a className=\"book-link\" href={props.data.infoLink} target=\"_blank\">Learn More Here</a>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookDisplay;","import axios from 'axios';\r\nrequire('dotenv').config();\r\n\r\nexport default {\r\n    searchByTitle: (searchTerm) => {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}+intitle`)\r\n    },\r\n    searchByAuthor: (searchTerm) => {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}+inauthor`)\r\n    },\r\n    addNewBook: (book) => {\r\n        return axios.post(\"/api/books\", book);\r\n    },\r\n    searchByID: (id) => {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes/${id}`);\r\n    }\r\n}","import React, { useRef, useState, useEffect } from 'react';\r\nimport BookDisplay from '../components/bookDisplay';\r\nimport API from '../utils/api';\r\n\r\nfunction Search() {\r\n    const searchInputRef = useRef();\r\n    const searchByRef = useRef();\r\n    const [books, setBooks] = useState([])\r\n\r\n    const submitSave = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.childNodes[0].dataset.id);\r\n        const bookID = event.target.childNodes[0].dataset.id;\r\n        API.searchByID(bookID).then((data) => {\r\n            console.log(data);\r\n            const { data: { id, volumeInfo: { authors:[author], description, imageLinks, infoLink, subtitle, title }}} = data;\r\n            const newBook = { id, title, author, description, imageLinks, infoLink, subtitle};\r\n            console.log(newBook);\r\n            API.addNewBook(newBook);\r\n        })\r\n    }\r\n\r\n        // Set useState to set state of books to an array of objects.\r\n\r\n    const submitSearch = (event) => {\r\n        event.preventDefault();\r\n   \r\n        if(searchByRef.current.value === \"Title\") {\r\n            API.searchByTitle(searchInputRef.current.value).then((res) => {\r\n                \r\n                const newBooks = [];\r\n                // console.log(res);\r\n                const { data: { items}} = res;\r\n                items.map(({ id, volumeInfo }) => {\r\n                    const { authors:[author], description, imageLinks, infoLink, subtitle, title } = volumeInfo;\r\n                    newBooks.push({id, author, description, imageLinks, infoLink, subtitle, title})\r\n                })\r\n                console.log(newBooks);\r\n                setBooks(newBooks);\r\n\r\n            }).catch(err => console.log(err));\r\n        } else {\r\n            API.searchByAuthor(searchInputRef.current.value).then((res) => {\r\n                const newBooks = [];\r\n                // console.log(res);\r\n                const { data: { items}} = res;\r\n                items.map(({ volumeInfo }) => {\r\n                    const { authors:[author], description, imageLinks: { thumbnail: image}, infoLink, subtitle, title } = volumeInfo;\r\n                    newBooks.push({author, description, image, infoLink, subtitle, title})\r\n                })\r\n                console.log(newBooks);\r\n                setBooks(newBooks);\r\n            }).catch(err => console.log(err));\r\n        }\r\n        // Set this submitSearch function to fill the state of the books array with the retried items.\r\n        //  THEN, set the props for the bookdisplay as the current state.\r\n        // return;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-container\">\r\n                <h4>\r\n                    Book Search\r\n            </h4>\r\n                <form onSubmit={submitSearch}>\r\n                    <input name=\"searchContent\" ref= {searchInputRef}/>\r\n                    <br />\r\n                    <label for=\"searchMethod\">Search by:</label>\r\n                    <select name=\"searchMethod\" id=\"searchMethod\" ref={searchByRef}>\r\n                        <option value=\"Title\" >Title</option>\r\n                        <option value=\"Author\" >Author</option>\r\n                    </select>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"books-container\">\r\n                {books && \r\n                books.map((book) => {\r\n                  return  <form onSubmit={submitSave}>\r\n                     <BookDisplay data={book} />\r\n                <button type=\"submit\">Save</button>\r\n                </form>\r\n                })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport BookDisplay from '../components/bookDisplay';\r\n\r\nfunction Saved() {\r\n\r\n\r\n    return (\r\n        <div className=\"books-container\">\r\n            <h4>\r\n                Saved Books\r\n            </h4> \r\n            <BookDisplay />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Nav() {\r\n  return (\r\n    <nav >\r\n      <Link to=\"/\">\r\n        Search\r\n      </Link>\r\n      <Link to=\"/saved\">\r\n        Saved Books\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Google Book Finder\r\n            </h1>\r\n            <h3>\r\n                Search for books and save for later.\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from './pages/search';\nimport Saved from './pages/saved';\nimport Nav from './components/nav';\nimport Jumbotron from './components/jumbotron';\n\nfunction App() {\n  return (\n    <Router>\n    <Nav />\n    <Jumbotron />\n    <Switch>\n      {/* This is where the main page routes will go.  */}\n      <Route exact path= \"/\">\n        <Search />\n      </Route>\n      <Route exact path=\"/saved\">\n        <Saved />\n      </Route>\n    </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}